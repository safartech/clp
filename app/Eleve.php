<?php

namespace App;

use Illuminate\Database\Eloquent\Model;

class Eleve extends Model
{
    //
protected $guarded=["id",'classe'];
   // protected $fillable=['nom_complet','nom','prenoms','sexe'];

    protected $dates = ['date_nsce'];

    public function responsables(){
        return $this->belongsToMany('App\Responsable','lien_parentes');
    }

    public function matieres(){
        return $this->belongsToMany('App\Matiere','notations','eleve_id','matiere_id');
    }

    public function classe(){
        return $this->belongsTo('App\Classe');
    }

    public function tafs(){
        return $this->belongsToMany('App\Taf');
    }
    /*public function user(){
        return $this->belongsTo('App\User');
    }*/

    public function evaluations(){
        return $this->belongsToMany('App\Evaluation','notations','eleve_id')->withPivot(['id','note']);
    }

    public function notes(){
        return $this->belongsToMany('App\Evaluation','notations','eleve_id')->withPivot(['id','note']);
    }

    public function competences(){
        return $this->belongsToMany('App\Competence','epc','eleve_id')->withPivot(['session_id','validation']);
    }

    public function appreciations(){
        return $this->hasMany('App\Appreciation');
    }

    public function appreciation(){
        return $this->hasOne('App\Appreciation');
    }

    public function attitudes(){
        return $this->belongsToMany(Attitude::class,'avis');
    }

    public function observations(){
        return $this->belongsToMany(Observation::class,'obs');
    }

    public function absents(){
        return $this->hasMany(Absent::class);
    }

    public function absences(){
        return $this->hasMany(Absence::class,'eleve_id');
    }



    public function abs(){
        return $this->withCount('absents');
    }



    public function retards(){
        return $this->hasMany(Retard::class);
    }

    public function conseils(){
        return $this->hasMany(Conseil::class);
    }

    /*protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::created(function($el){
            User::create([
                'name'=>$el->nom_complet,
                'email'=>strtolower($el->nom).$el->id."@clp.com",
                'password'=>bcrypt("123456"),
                'eleve_id'=>$el->id,
                'role_id'=>13,


            ]);

        });

        self::deleted(function($delEl){
            $user= User::where("eleve_id",$delEl->id)->first();
            User::destroy($user->id);
        });


    }*/

}
